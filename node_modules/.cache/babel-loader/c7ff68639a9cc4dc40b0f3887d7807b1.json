{"ast":null,"code":"var _jsxFileName = \"D:\\\\music_app\\\\src\\\\Songplayers.js\";\nimport React, { useState, useRef } from 'react';\n\nfunction Songplayers({\n  currentsong,\n  setcurrentsong,\n  isplaying,\n  setisplaying,\n  audioRef,\n  songinfo,\n  setsonginfo,\n  songs\n}) {\n  const timehandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setsonginfo({ ...songinfo,\n      currentTime: current,\n      duration\n    });\n  };\n\n  const clickhandler = () => {\n    if (isplaying) {\n      audioRef.current.pause();\n      setisplaying(!isplaying);\n    } else {\n      audioRef.current.play();\n      setisplaying(!isplaying);\n    }\n  };\n\n  const Mathcorrect = e => {\n    return Math.floor(e / 60) + ':' + ('0' + Math.floor(e % 60)).slice(-2);\n  };\n\n  const changehandle = e => {\n    audioRef.current.currentTime = e.target.value;\n    setsonginfo({ ...songinfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skip_handle = direction => {\n    const currentIndex = songs.findIndex(song => song.id === currentsong.id);\n\n    if (direction == \"S_forward\") {\n      setcurrentsong(songs[currentIndex + 1] % songs.length);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time_control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 2\n    }\n  }, Mathcorrect(songinfo.currentTime)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: 0,\n    max: songinfo.duration || 0,\n    value: songinfo.currentTime,\n    onChange: changehandle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 2\n    }\n  }, Mathcorrect(songinfo.duration), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"play_control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => skip_handle('S_backward'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 2\n    }\n  }, \"S_backward\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickhandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 2\n    }\n  }, \"play\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => skip_handle('S_forward'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 2\n    }\n  }, \"S_forward\"), /*#__PURE__*/React.createElement(\"audio\", {\n    onLoadedMetadata: timehandler,\n    onTimeUpdate: timehandler,\n    ref: audioRef,\n    src: currentsong.Audio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 2\n    }\n  })));\n}\n\nexport default Songplayers;","map":{"version":3,"sources":["D:/music_app/src/Songplayers.js"],"names":["React","useState","useRef","Songplayers","currentsong","setcurrentsong","isplaying","setisplaying","audioRef","songinfo","setsonginfo","songs","timehandler","e","current","target","currentTime","duration","clickhandler","pause","play","Mathcorrect","Math","floor","slice","changehandle","value","skip_handle","direction","currentIndex","findIndex","song","id","length","Audio"],"mappings":"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","sourcesContent":["import React, { useState, useRef} from 'react';\r\nfunction Songplayers({currentsong, setcurrentsong, isplaying, setisplaying ,audioRef,  songinfo, setsonginfo, songs}){\r\n\t\r\n\t\r\n\tconst timehandler =(e)=>{\r\n\tconst current= e.target.currentTime;\r\n\t const duration =e.target.duration;\r\n\tsetsonginfo({...songinfo, currentTime:current , duration})\r\n\t}\r\n\t\r\n\tconst clickhandler =()=>{\r\n\t\t\r\n\t\r\n\t\tif(isplaying){\r\n\t\t\taudioRef.current.pause();\r\n\t\t\tsetisplaying(!isplaying)\r\n\t\t}else{\r\n\t\t\taudioRef.current.play();\r\n\t\t\tsetisplaying(!isplaying)\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\r\n\t}\r\n\tconst Mathcorrect =(e)=>{\r\n\t\treturn(\r\n\t\t(Math.floor(e/60)) + ':' + ('0' + Math.floor(e%60)).slice(-2)\r\n\t\t)\r\n\t\t\r\n\t}\r\n\tconst changehandle =(e) =>{\r\n\t\taudioRef.current.currentTime= e.target.value;\r\n\t\tsetsonginfo({...songinfo, currentTime:e.target.value})\r\n\t\t\r\n\t\t\r\n\t}\r\n\tconst skip_handle = (direction)=>{\r\n\t\tconst currentIndex = songs.findIndex((song) => song.id === currentsong.id)\r\n\t\tif(direction == \"S_forward\"){\r\n\t\t\tsetcurrentsong((songs[currentIndex +1])% songs.length);\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\treturn(\r\n\t<div className='player'>\r\n\t<div className=\"time_control\">\r\n\t\r\n\t<p>{Mathcorrect(songinfo.currentTime)}</p>\r\n\t\r\n\t<input type=\"range\" min={0} max={songinfo.duration || 0} value={songinfo.currentTime} onChange={changehandle}></input>\r\n\t\r\n\t<p>{Mathcorrect(songinfo.duration)} </p>\r\n\t\r\n\t</div>\r\n\t<div className=\"play_control\">\r\n\t<button onClick={()=> skip_handle('S_backward')}>S_backward</button>\r\n\t<button onClick={clickhandler}>play</button>\r\n\t\r\n\t<button onClick={()=> skip_handle('S_forward')}>S_forward</button>\r\n\t<audio onLoadedMetadata={timehandler} onTimeUpdate={timehandler} ref={audioRef} src={currentsong.Audio}></audio>\r\n\t</div>\r\n\t</div>\r\n\t)\r\n\t\r\n\t\r\n\t\r\n}\r\n\r\n\r\nexport default Songplayers\r\n"]},"metadata":{},"sourceType":"module"}